/**
 * Copyright (C) 2010
 * Swarm Intelligence Team (SIT)
 * Department of Computer and Systems
 * University of Pernambuco
 * Brazil
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */
package br.upe.ecomp.dosa.view.mainwindow;

/**
 * Main application window.
 * <p>
 * All the code was automatically generated using NetBeans.
 * 
 * @author Rodrigo Castro
 */
public abstract class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame.
     */
    public MainWindow() {
        super();
        initComponents();
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        toolBarPanel = new javax.swing.JPanel();
        toolBar = new javax.swing.JToolBar();
        newToolBarButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        openToolBarButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        saveToolBarButton = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        startSimulationToolBarButton = new javax.swing.JButton();
        tabbedPane = new javax.swing.JTabbedPane();
        panelAlgorithm = new javax.swing.JPanel();
        splitPaneAlgorithm = new javax.swing.JSplitPane();
        scrollPaneTree = new javax.swing.JScrollPane();
        tree = new javax.swing.JTree();
        scrollPaneTable = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        panelResults = new javax.swing.JPanel();
        menuBar = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        menuItemSalvar = new javax.swing.JMenuItem();
        menuEdit = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        toolBarPanel.setLayout(new java.awt.GridLayout(1, 0, 0, 5));

        toolBar.setFloatable(false);
        toolBar.setRollover(true);
        toolBar.setMaximumSize(new java.awt.Dimension(65, 32));
        toolBar.setMinimumSize(new java.awt.Dimension(65, 32));
        toolBar.setPreferredSize(new java.awt.Dimension(65, 32));

        newToolBarButton.setBackground(new java.awt.Color(128, 128, 128));
        newToolBarButton.setForeground(new java.awt.Color(128, 128, 128));
        newToolBarButton.setIcon(new javax.swing.ImageIcon(ClassLoader.getSystemResource("images/new.png")));
        newToolBarButton.setToolTipText("New");
        newToolBarButton.setBorderPainted(false);
        newToolBarButton.setFocusable(false);
        newToolBarButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newToolBarButton.setMaximumSize(new java.awt.Dimension(32, 32));
        newToolBarButton.setMinimumSize(new java.awt.Dimension(32, 32));
        newToolBarButton.setPreferredSize(new java.awt.Dimension(32, 32));
        newToolBarButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        newToolBarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newToolBarButtonActionPerformed(evt);
            }
        });
        toolBar.add(newToolBarButton);
        toolBar.add(jSeparator1);

        openToolBarButton.setBackground(new java.awt.Color(128, 128, 128));
        openToolBarButton.setForeground(new java.awt.Color(128, 128, 128));
        openToolBarButton.setIcon(new javax.swing.ImageIcon(ClassLoader.getSystemResource("images/open.png")));
        openToolBarButton.setToolTipText("Open");
        openToolBarButton.setBorderPainted(false);
        openToolBarButton.setFocusable(false);
        openToolBarButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        openToolBarButton.setMaximumSize(new java.awt.Dimension(32, 32));
        openToolBarButton.setMinimumSize(new java.awt.Dimension(32, 32));
        openToolBarButton.setPreferredSize(new java.awt.Dimension(32, 32));
        openToolBarButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        openToolBarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openToolBarButtonActionPerformed(evt);
            }
        });
        toolBar.add(openToolBarButton);
        toolBar.add(jSeparator2);

        saveToolBarButton.setBackground(new java.awt.Color(128, 128, 128));
        saveToolBarButton.setForeground(new java.awt.Color(128, 128, 128));
        saveToolBarButton.setIcon(new javax.swing.ImageIcon(ClassLoader.getSystemResource("images/save.png")));
        saveToolBarButton.setToolTipText("Save");
        saveToolBarButton.setBorderPainted(false);
        saveToolBarButton.setFocusable(false);
        saveToolBarButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        saveToolBarButton.setMaximumSize(new java.awt.Dimension(32, 32));
        saveToolBarButton.setMinimumSize(new java.awt.Dimension(32, 32));
        saveToolBarButton.setPreferredSize(new java.awt.Dimension(32, 32));
        saveToolBarButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        saveToolBarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveToolBarButtonActionPerformed(evt);
            }
        });
        toolBar.add(saveToolBarButton);
        toolBar.add(jSeparator3);

        startSimulationToolBarButton.setBackground(new java.awt.Color(128, 128, 128));
        startSimulationToolBarButton.setForeground(new java.awt.Color(128, 128, 128));
        startSimulationToolBarButton.setIcon(new javax.swing.ImageIcon(ClassLoader
                .getSystemResource("images/start.png")));
        startSimulationToolBarButton.setToolTipText("Start simulation");
        startSimulationToolBarButton.setBorderPainted(false);
        startSimulationToolBarButton.setFocusable(false);
        startSimulationToolBarButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        startSimulationToolBarButton.setMaximumSize(new java.awt.Dimension(32, 32));
        startSimulationToolBarButton.setMinimumSize(new java.awt.Dimension(32, 32));
        startSimulationToolBarButton.setPreferredSize(new java.awt.Dimension(32, 32));
        startSimulationToolBarButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        startSimulationToolBarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startSimulationToolBarButtonActionPerformed(evt);
            }
        });
        toolBar.add(startSimulationToolBarButton);

        toolBarPanel.add(toolBar);

        getContentPane().add(toolBarPanel);

        panelAlgorithm.setLayout(new java.awt.GridLayout(1, 0));

        splitPaneAlgorithm.setDividerLocation(110);
        splitPaneAlgorithm.setDividerSize(5);
        splitPaneAlgorithm.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        scrollPaneTree.setViewportView(tree);

        splitPaneAlgorithm.setTopComponent(scrollPaneTree);

        table.setModel(new javax.swing.table.DefaultTableModel(new Object[][] { { null, null, null, null },
                { null, null, null, null }, { null, null, null, null }, { null, null, null, null } }, new String[] {
                "Title 1", "Title 2", "Title 3", "Title 4" }));
        scrollPaneTable.setViewportView(table);

        splitPaneAlgorithm.setRightComponent(scrollPaneTable);

        panelAlgorithm.add(splitPaneAlgorithm);

        tabbedPane.addTab("Algorithm", panelAlgorithm);

        panelResults.setLayout(new java.awt.GridLayout(1, 0));
        tabbedPane.addTab("Results", panelResults);

        getContentPane().add(tabbedPane);
        tabbedPane.getAccessibleContext().setAccessibleName("Algorithm");

        menuBar.setBackground(new java.awt.Color(128, 128, 128));
        menuBar.setInheritsPopupMenu(true);
        menuBar.setName("menu"); // NOI18N

        menuFile.setBackground(new java.awt.Color(128, 128, 128));
        menuFile.setText("File");
        menuFile.setFont(new java.awt.Font("Lucida Grande", 1, 14));
        menuFile.setHideActionText(true);
        menuFile.setVerifyInputWhenFocusTarget(false);

        menuItemSalvar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S,
                java.awt.event.InputEvent.META_MASK));
        menuItemSalvar.setText("Salvar");
        menuFile.add(menuItemSalvar);

        menuBar.add(menuFile);

        menuEdit.setBackground(new java.awt.Color(128, 128, 128));
        menuEdit.setText("Edit");
        menuEdit.setFont(new java.awt.Font("Lucida Grande", 1, 14));
        menuBar.add(menuEdit);

        setJMenuBar(menuBar);

        pack();
    }// </editor-fold>

    protected abstract void openToolBarButtonActionPerformed(java.awt.event.ActionEvent evt);

    protected abstract void newToolBarButtonActionPerformed(java.awt.event.ActionEvent evt);

    protected abstract void saveToolBarButtonActionPerformed(java.awt.event.ActionEvent evt);

    protected abstract void startSimulationToolBarButtonActionPerformed(java.awt.event.ActionEvent evt);

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindowActions().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    protected javax.swing.JToolBar.Separator jSeparator1;
    protected javax.swing.JToolBar.Separator jSeparator2;
    protected javax.swing.JToolBar.Separator jSeparator3;
    protected javax.swing.JMenuBar menuBar;
    protected javax.swing.JMenu menuEdit;
    protected javax.swing.JMenu menuFile;
    protected javax.swing.JMenuItem menuItemSalvar;
    protected javax.swing.JButton newToolBarButton;
    protected javax.swing.JButton openToolBarButton;
    protected javax.swing.JPanel panelAlgorithm;
    protected javax.swing.JPanel panelResults;
    protected javax.swing.JButton saveToolBarButton;
    protected javax.swing.JScrollPane scrollPaneTable;
    protected javax.swing.JScrollPane scrollPaneTree;
    protected javax.swing.JSplitPane splitPaneAlgorithm;
    protected javax.swing.JButton startSimulationToolBarButton;
    protected javax.swing.JTabbedPane tabbedPane;
    protected javax.swing.JTable table;
    protected javax.swing.JToolBar toolBar;
    protected javax.swing.JPanel toolBarPanel;
    protected javax.swing.JTree tree;
    // End of variables declaration

}
